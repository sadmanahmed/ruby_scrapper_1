continue
product_array.last
product_array.count
product_array.first
product_aray.first
product.first
continue
exit
last_page = (total_products.to_f / per_page.to_f).round
per_page = products.count
total_products = parsed_page.css('div.col-md-6.rs-none.text-right').text.split[-3].to_i
last_page = (total_products.to_f / per_page.to_f).round
per_page = products.count
parsed_page.css('div.col-md-6.rs-none.text-right').text.split[-3].to_i
parsed_page.css('div.col-md-6.rs-none.text-right').text.split[-3.].to_i
parsed_page.css('div.col-md-6.rs-none.text-right').text.split[-3]
parsed_page.css('div.col-md-6.rs-none.text-right').text.sprlit[-3]
b[-3]
b[-2]
b= a.split
a.split(' ')
a.split
a
a= parsed_page.css('div.col-md-6.rs-none.text-right').text
parsed_page.css('div.bottom-bar').text
parsed_page.css('div.bottom-bar.p').text
parsed_page.css('div.bottom-bar.p')
a
a[-10]
a[1]
a[-3]
a[-2]
a[-1]
a
a= parsed_page.css('div.col-md-6.rs-none.text-right').text
parsed_page.css('div.col-md-6.rs-none.text-right').text
parsed_page.css('div.col-md-6.rs-none.text-right.p').text
parsed_page.css('div.col-md-6.rs-none.text-right').text
parsed_page.css('div.row').text
parsed_page.css('row').text
parsed_page.css('div.bottom-bar').text
parsed_page.css('div.bottom-bar')
parsed_page.css('div.bottom-bar.p')
parsed_page.css('div.bottom-bar.p').text
continue
parsed_page.css('p').text
parsed_page.css('p')
continue
  products = parsed_page.css('div.product-thumb').count
  products = parsed_page.css('div.product-thumb')
continue
darsed_page.css('div.product-thumb').count
parsed_page.css('div.product-thumb').count
parsed_page.css('div.row.main-content').count
parsed_page.css('div.row.main-content').text
parsed_page.css('div.row.main-content')
continue
reload
parsed_page.css('div.product-listing').text
parsed_page.css('div.product-listing')
parsed_page.css('div.product-listing').count
continue
product_array.count
product_array[0]
product_array[1]
product_array.second
product_array.first
product_array
continue
product_array.first
product_array.count
continue
product_array.first
product_array.count
product_array
products.first
products.count
products.first
products
continue
product[:title]
continue
product[:title]
continue
product[:title][1]
product[:title][0]
product[:title]
continue
product[:title]
continue
product[:title][0]
product[:title][1]
product[:title]
continue
p.css('h4.product-name').text
p.css('div.product-content-blcok').text
p.css('div.product-content-block').text
p.css('h4.product-name').text
p.css('h4.product-name').first.text
p.css('h4.product-name.a').text
p.css('h4.product-name').text
p.css('h4.product-name')
p=parsed_page.css('div.product-thumb')
continue
product[:price]
product[:url]
product[:price]
product[:title]
continue
j_f.css('a')[0].attributes["href"].value
j_f.css('a').text
j_f.css('span').first.text
j_f.css('a')[0].attributes["href"].value
j_f.css('a')[0].attributes["href"].values
j_f.css('a')[0].attributes["href"].value
j_f.css('a')[0].attributes
j_f.css('a')[0]
j_f.css('a')
j_f.css('a').text
j_f.css('span').first.text
j_f.css('span').text
j_f.css('div.price.space-between').text
j_f.css('a').text
j_f.css('a')
j_f = j.first
j.first
j.count
j=parsed_page.css('div.product-thumb')
j = parsed_page.css('div.container')
j.count
j = parsed_page.css('div.container')
continue
parsed_page.css('div.container')
continue
parsed_page.css('div.container')
parsed_page.css('div.product-categories')
parsed_page
unparsed_page
url
